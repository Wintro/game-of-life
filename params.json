{
  "name": "Game of Life - C++ edition",
  "tagline": "John Conway's Game of Life, built in fully object oriented C++.",
  "body": "The **Game of Life**, also known simply as **Life**, is a [cellular automaton](https://en.wikipedia.org/wiki/Cellular_automaton) devised by the British mathematician John Horton Conway in 1970.\r\n\r\nThis is a rendition of the Game of Life in the C++ language, using modular and structured systems.\r\n\r\n\r\n## Features ##\r\n * Play a fully functional rendition of Conway's Game of Life in C++.\r\n * Create a grid with inputted size parameters.\r\n * Evolve step-by-step.\r\n * Automatically evolve every interval set by the user.\r\n * Modify cell status between evolutions.\r\n\r\n\r\n<br>\r\n\r\n\r\n## Roadmap ##\r\n\r\n#### Near: ####\r\n* Saving and loading grids.\r\n\r\n#### Future: ####\r\n * Pre-built \"templates\" that insert certain well-known Game of Life entities at the cursor.\r\n\r\n#### Completed: ####\r\n* Allow the user to input the height and width of the grid, as well as to be able to execute an evolution.\r\n* Better display system.\r\n* Allow the user to input an execution speed and start the execution running a generation then waiting for the inputted amount of time and looping.\r\n* Make the grid interactive.\r\n\r\n\r\n<br>\r\n\r\n\r\n## Limitations ##\r\n * The grid is not of infinite size; thus, the program behaves incorrectly when cells are at the edges of the grid.\r\n * Attempting to make the size of the grid larger than the size of the terminal the program is executed in will result in unpredictable complications.\r\n\r\n\r\n<br>\r\n\r\n\r\n## Prerequisites ##\r\n* `sudo apt install libncurses5-dev`\r\n\r\n\r\n## Installation ##\r\n#### Regular compile ####\r\n* Clone this repository. [`git clone https://github.com/Wintro/game-of-life.git`]\r\n* Navigate to the root folder of the repository. [`cd game-of-life`]\r\n* In root folder of the repository compile the program. [`make`]\r\n* The compiler program is then in the root folder of the repository and can be executed. [`./golcpp`]\r\n\r\n#### Full installation ####\r\n* To install the program to `/usr/local/bin`, run `sudo make install` in the root folder of the repository.\r\n* The program can then be executed from any place on the system using `golcpp`.\r\n\r\n#### Full uninstallation ####\r\n* To uninstall the program from `/usr/local/bin`, run `sudo make uninstall` in the root folder of the repository.\r\n\r\n#### Debug ####\r\n* To create a debuggable executable, run `make debug` in the root folder of the repository.\r\n\r\n#### Cleaning the build and bin folders ####\r\n* To clean and remove all builds, run `make clean` in the root folder of the repository.\r\n\r\n\r\n<br>\r\n\r\n\r\n## License ##\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}